/**********************************************************************
 * TDRP params for DsProxyServer
 **********************************************************************/

//======================================================================
//
// DsProxyServer will listen for incoming messages. It examines the URL, 
//   and depending on the translator and/or protocol, it will contact the 
//   relevant server on the local host, or on a host as specified in the 
//   startup parameters.
//
//======================================================================
 
//======================================================================
//
// DEBUGGING AND PROCESS CONTROL.
//
//======================================================================
 
///////////// debug ///////////////////////////////////
//
// Debug option.
//
// If set, debug messages will be printed appropriately.
//
//
// Type: enum
// Options:
//     DEBUG_OFF
//     DEBUG_NORM
//     DEBUG_VERBOSE
//

debug = DEBUG_OFF;

///////////// no_threads //////////////////////////////
//
// Option to prevent server from using a thread per client.
//
// For debugging purposes it it sometimes useful to suppress the use of 
//   threads. Set no_threads to TRUE for this type of debugging.
//
//
// Type: boolean
//

no_threads = FALSE;

///////////// instance ////////////////////////////////
//
// Process instance.
//
// Used for procmap registration and auto restarting.
//
//
// Type: string
//

instance = "primary";

//======================================================================
//
// Server details for support from ServerMgr.
//
//======================================================================
 
///////////// port ////////////////////////////////////
//
// Port number.
//
// The server listens on this port for client requests.
//
//
// Type: int
//

port = $(DS_PROXYSERVER_PORT);

///////////// qmax ////////////////////////////////////
//
// Max quiescent period (secs).
//
// If the server does not receive requests for this time period, it will 
//   die gracefully.
//
//
// Type: int
//

qmax = -1;

///////////// max_clients /////////////////////////////
//
// Maximum number of clients.
//
// This is the maximum number of threads the application will produce to 
//   handle client requests.  If the maximum is reached, new clients will 
//   receive a SERVICE_DENIED error message and will have to request the 
//   data again.  If set to -1, no maximum is enforced.
//
//
// Type: int
//

max_clients = 128;

///////////// target_host /////////////////////////////
//
// Host to which messages are forwarded.
//
//
// Type: string
//

target_host = "localhost";

//======================================================================
//
// SECURITY.
//
//======================================================================
 
///////////// run_secure //////////////////////////////
//
// Option to run in secure mode.
//
// If TRUE, the server will reject any URLs which specify an absolute 
//   path, or a path with .. in it. This prevents the server from writing 
//   any files which are not below DATA_DIR in the directory tree.
//
//
// Type: boolean
//

run_secure = FALSE;

///////////// run_read_only ///////////////////////////
//
// Option to run in read-only mode.
//
// If TRUE, the server will respond only to read requests, and will 
//   ignore write requests.
//
//
// Type: boolean
//

run_read_only = FALSE;

///////////// allow_http //////////////////////////////
//
// Option to allow http requests.
//
// If TRUE, the server will strip off header in request message.
//
//
// Type: boolean
//

allow_http = TRUE;

